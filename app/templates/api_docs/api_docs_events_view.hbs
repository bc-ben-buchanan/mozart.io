<h1>Mozart.Events</h1>
<p>Events is a global static class that handles all <a href="/apidocs/mzt_object">Mozart.MztObject</a> event binding.</p>
<p><strong>Caveat:</strong> Events is an internal implementation class within Mozart, its interface, events, data and implementation may change without warning.</p>
<h2>Class Properties</h2>
	<h3>callbacks</h3>
	<p>A map of objectId to event binding data.</p>
<h2>Class Methods</h2>
	<h3>bind(objectId, eventName, callback)</h3>
	<p>Bind the event <code>eventName</code> on the MztObject with <code>objectId</code> to the given <code>callback</code>.</p>
	<h3>one(objectId, eventName, callback)</h3>
	<p>Single bind the event <code>eventName</code> on the MztObject with <code>objectId</code> to the given <code>callback</code>. The binding will be removed with <code>unbind</code> after its first trigger.</p>
	<h3>unbind(objectId, eventName, callback)</h3>
	<p>Unbind the event <code>eventName</code> on the MztObject with <code>objectId</code> from the given <code>callback</code>.</p>
	<h3>trigger(objectId, eventName, data)</h3>
	<p>Trigger the event <code>eventName</code> on the MztObject with <code>objectId</code> with the given <code>data</code>.</p>
	<h3>getBinds(objectId, eventName)</h3>
	<p>Get an array of binding information of the event <code>eventName</code> on the MztObject with <code>objectId</code>.</p>